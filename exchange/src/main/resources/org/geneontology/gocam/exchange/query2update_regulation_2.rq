prefix owl: <http://www.w3.org/2002/07/owl#>
prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> 
prefix obo: <http://purl.obolibrary.org/obo/>
prefix biopax: <http://www.biopax.org/release/biopax-level3.owl#>
prefix skos: <http://www.w3.org/2004/02/skos/core#>

select distinct ?reaction2 ?reaction1 ?reaction2enablerLabel ?reaction2Label ?reaction1Label #directly negatively regulated by obo:RO_0002023
where {
  ?reaction2 obo:RO_0002333 ?reaction2enabler . #enabled by                      
  ?reaction1 obo:RO_0002233 ?inputA . #has input
  ?reaction1 obo:RO_0002233 ?inputB . #has input 		  
  ?inputA skos:exactMatch ?A . 
  ?reaction2enabler skos:exactMatch ?A .
  filter(?inputA != ?inputB) . 
  filter(?reaction1 != ?reaction2) .
    ?reaction2enabler rdfs:label ?reaction2enablerLabel .
    ?reaction2 rdfs:label ?reaction2Label .
    ?reaction1 rdfs:label ?reaction1Label .
  #above seems to work by itself but ignores what happens in reaction1
  #now see about verifying the appearance of inhibition happening..
  #First check for case where R2 is enabled by a specific protein 
  #(not a complex) and R1 attaches that protein to a complex (such as a ligand trap), thus stopping R2
  {	?reaction1 obo:RO_0002234 ?r1output . #has output 
  	?r1output obo:BFO_0000051 ?r1outputPart . #has part 
  	?r1outputPart rdf:type ?P . 
  	?reaction2enabler rdf:type ?P . 
    ?P rdfs:subClassOf ?proteinClass .
    VALUES ?proteinClass { obo:CHEBI_36080 biopax:Protein}
  }  
  #Now check case where R2 is enabled by a complex, R1 produces a complex as output, and the two share parts
  # idea is that R1 is modifying a complex required by R2 to function, hence stopping R2
  UNION {
  	?reaction1 obo:RO_0002234 ?r1output . #has output 
  	?r1output obo:BFO_0000051 ?r1outputPart . #has part 
  	?reaction2enabler obo:BFO_0000051 ?r2enablerPart . 
  	?r1outputPart skos:exactMatch ?P . #using this skos pattern as there are no classes for most complexes in OBO Tbox.. 
  	?r2enablerPart skos:exactMatch ?P . #basically is just name matching from biopax uris
   }
  }

# RO_0002024  directly positively regulated by 
# RO_0002023  directly negatively regulated by 
# RO_0002334 regulated by
# obo:RO_0002233 has input 
# obo:RO_0002333 enabled by
# RO_0002234 has output
# obo:BFO_0000051 has part
# obo:RO_0002413 provides direct input for

