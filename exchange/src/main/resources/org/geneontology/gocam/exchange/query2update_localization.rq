prefix owl: <http://www.w3.org/2002/07/owl#>
prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> 
prefix obo: <http://purl.obolibrary.org/obo/>
prefix skos: <http://www.w3.org/2004/02/skos/core#>


#If there is no specified GO molecular function term (except root MF GO:0003674), 
#and the input entities are the same as the output entities
#and the input entities have different locations from the output entities
#then there may be some transport happening - (but for GO, only when there is something that enables the transport to happen)

select ?reaction  ?start_location_type ?end_location_type ?start_location ?end_location ?input_thing_type ?output_thing_type ?thing_label ?pathway ?enabler   
where {
  	#reaction annotated to root (check for reasoning..)
  	?reaction rdf:type obo:GO_0003674 .
  	#has an output
   	?reaction obo:RO_0002234 ?output .
   	#with a location
   	?output obo:RO_0001025 ?end_location .
   	#with a class
   	?end_location rdf:type ?end_location_type .

	#has an input
	?reaction obo:RO_0002233 ?input .
   	#with a location
   	?input obo:RO_0001025 ?start_location .
   	#with a class
   	?start_location rdf:type ?start_location_type .   	

	#using REO pattern, entities in different locations are different classes...
	#TODO convert to a semantic pattern.. Probably make a change in REO to add a grouping class
	?input rdfs:label ?thing_label . 
	?output rdfs:label ?output_label . 
	filter(?thing_label = ?output_label) . 

	?output rdf:type ?output_thing_type .
	?input rdf:type ?input_thing_type . 
	
	#and the thing types are not boring
	filter(?input_thing_type != <http://www.w3.org/2002/07/owl#NamedIndividual>) . 
	filter(?input_thing_type != <http://www.w3.org/2002/07/owl#Class>) . 
	
	#and the locations are different
	filter(?start_location_type != ?end_location_type) .
	#and they are not boring
	filter(?start_location_type != <http://www.w3.org/2002/07/owl#NamedIndividual>) .
	filter(?end_location_type != <http://www.w3.org/2002/07/owl#NamedIndividual>) . 
	filter(?end_location_type != <http://purl.obolibrary.org/obo/GO_0005575>) . 
	filter(?start_location_type != <http://purl.obolibrary.org/obo/GO_0005575>) . 
	
	?reaction obo:BFO_0000050 ?pathway . 
	OPTIONAL{?reaction obo:RO_0002333 ?enabler} 
	
}

# protein containing complex <http://purl.obolibrary.org/obo/GO_0032991>
#located_in = obo:RO_0001025
# obo:RO_0002233 has input 
# obo:RO_0002333 enabled by
# RO_0002234 has output
# obo:BFO_0000051 has part
# obo:RO_0002413 provides direct input for